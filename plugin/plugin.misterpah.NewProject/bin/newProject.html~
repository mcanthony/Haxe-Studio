<script src="../../../bin/js/jquery-2.0.3.min.js"></script>
<script src="../../../bin/js/bootstrap/bootstrap-notify.js"></script>	
<script src="../../../bin/js/bootstrap/bootstrap.min.js"></script>	
<script src="../../../bin/js/support.js"></script>	
<script src="../../../bin/js/node.dir.walker.js"></script>



<script>tsort = require('gaia-tsort');gui = require("nw.gui");win = gui.Window.get();</script>
<script src="../../../bin/js/haxestudio.js"></script>

<link href="../../../bin/css/bootstrap.min.css" rel="stylesheet" media="screen">
<link href="../../../bin/css/bootstrap-glyphicons.css" rel="stylesheet" media="screen">
<link href="../../../bin/css/bootstrap-notify.css" rel="stylesheet" media="screen">


<style>
.grayscale { 
  -webkit-filter: grayscale(100%);
  -moz-filter: grayscale(100%);
  -ms-filter: grayscale(100%);
  -o-filter: grayscale(100%);
  filter: grayscale(100%);
  filter: url(grayscale.svg); /* Firefox 4+ */
  filter: gray; /* IE 6-9 */
}


.box_shadow
{
-webkit-box-shadow: 0 0 10px 0 #eee;
box-shadow: 0 0 10px 0 #eee;
border:1px solid #ddd;
padding:10px;
-webkit-border-radius: 4px;
border-radius: 4px;
margin-bottom:10px;
}
</style>

<script>

function notify(message,type)
	{
	try
		{
		if (message.startsWith("Error"))
			{
			type = "danger";
			}
		}
	catch(e){}
	
	var closable =true;
	var fadeout = { enabled: true, delay: 3000 }
	var glyphicon = '';
	if (type=="danger")
		{
		closable = false;
		fadeout ={ enabled: true, delay: 10000 }
		glyphicon = '<span class="glyphicon glyphicon-warning-sign"></span>'
		}

	if (type=="info")
		{
		closable = true;
		fadeout ={ enabled: true, delay: 3000 }
		glyphicon = '<span class="glyphicon glyphicon-info-sign"></span>'
		}
		
	
	$('.bottom-right').notify({
		message: { text: message},
		type :type, // info,success,warning,danger,inverse,blackgloss
		closable:closable,
		fadeOut:fadeout,
		glyphicon:glyphicon
		}).show(); // for the ones that aren't closable and don't fade out there is a .hide() function.
	}	
	
var fs = require("fs");
function openProject(obj)
{
grayscale_all();
var id = $(obj).attr("meta");
$("#"+id).css("display","block");
$(obj).removeClass("grayscale");
$("#right_panel").css("display","block");
}

function grayscale_all()
{
$("#project_list").children().each(function()
	{
	$(this).addClass("grayscale");
	});
$("#project_desc").children().each(function()
	{
	$(this).css("display","none");
	});	
}

$(document).ready(function()
	{
	url = (document.URL).split("/");
	url.pop();
	path = "../"+url.slice(url.length-3,url.length).join("/")+"/template";
	walk(path,function(p1,p2,p3){scan_project_template(p2);});
	});

var template = {}
function scan_project_template(filename)
	{
	for (var i = 0;i < filename.length;i++)
		{
		if (filename[i].endsWith("~"))
			{
			continue;
			}
		var ret = fs.readFileSync(filename[i],"utf-8");
		var data = JSON.parse(ret);
		template[data.name] = data;
		$("#project_list").append(build_list(data));
		$("#project_desc").append(build_desc(data));
		}
	grayscale_all();
	}
	
	
function build_list(obj)
	{
	var result = ['<div meta="'+obj.name+'" onclick="openProject(this);" style="" class="col-xs-6">',
		'<div class="box_shadow">',
			'<img width="100%" src="./images/'+obj.logo+'">',
			'<div class="text-center">'+obj.name+'</div>',
		'</div>',
	'</div>'].join("\n");

	return result;
	}






function create_haxestudio_plugin(projectName)
	{
	if (!projectName.startsWith("plugin"))
		{
		notify("please follow the format : plugin.name.PluginName ","danger");
		return;
		}
	var temp = projectName.split(".");
	console.log(temp.length);
	if (temp.length>3)
		{
		notify("please follow the format plugin.name.PluginName! ","danger");
		return;
		}
	var className = temp.pop();
	var name = temp.pop();
	var plugin_prefix = "../plugin/";
	try
		{
		fs.mkdirSync(plugin_prefix+projectName);
		}
	catch(e)
		{
		notify("Can't generate plugin! check for duplicate name","danger");
		return;		
		}
		

	fs.mkdirSync(plugin_prefix+projectName+"/bin");
	fs.mkdirSync(plugin_prefix+projectName+"/source");
	fs.mkdirSync(plugin_prefix+projectName+"/source/plugin");
	fs.mkdirSync(plugin_prefix+projectName+"/source/plugin/"+name);


	// create plugin.json
	Utils.newFile(plugin_prefix+projectName+"/bin/plugin.json");
	var plugin_dot_json = ['{',
	'"name":"'+className+'",',
	'"actualName":"'+projectName+'",',
	'"author":"'+name+'",',
	'"version":0.1,',
	'"description":"Edit this in /plugin/'+projectName+'/bin/plugin.json",',
	'"website":"http://haxestudio.com/",',
	'"dependency":[],',
	'"configuration":{',
	'	"default":0',
	'	}',
	'}'].join("\n");
	Utils.saveFile(plugin_prefix+projectName+"/bin/plugin.json",plugin_dot_json);

	
	// create build.xml
	Utils.newFile(plugin_prefix+projectName+"/source/build.hxml");
	var build_dot_xml = ["-cp ../../../source/externs/haxestudio",
	"-cp ../../../source/externs/nodejs-std/src",
	"-lib jQueryExtern",
	"-js ../bin/plugin.js",
	"-main "+projectName,
	"-dce full",
	"-debug"].join("\n");
	Utils.saveFile(plugin_prefix+projectName+"/source/build.hxml",build_dot_xml);


	// create ClassName.hx
	Utils.newFile(plugin_prefix+projectName+"/source/plugin/"+name+"/"+className+".hx");
	var ClassName_dot_hx = ["package plugin."+name+";",
	"import jQuery.*;",
	"import js.Browser;",
	"",
	"@:keep @:expose class "+ className,
	"{",
	"",	
	"	private static function plugin_path():String",
	"	{",
	'	return "'+plugin_prefix+'"/plugin.'+name+'.'+className+'"/bin";',
	"	}",
	"",
	"	static public function main():Void",
	"	{",
	"		create_ui();",
	"		register_listener();",
	"	}",
	"",	
	"	private static function create_ui():Void",
	"	{",
	"	}",
	"",	
	"	static public function register_listener():Void",
	"	{",
	"	}",
	"}"].join("\n");
	Utils.saveFile(plugin_prefix+projectName+"/source/plugin/"+name+"/"+className+".hx",ClassName_dot_hx);

	notify("project Created !","success");
	//win.emit("plugin.misterpah.NewProject:project_created",fs.realpathSync("../plugin-3rd-party"),projectName,"build.hxml");
	win.emit("plugin.misterpah.NewProject:setProjectXML",fs.realpathSync(plugin_prefix+projectName+"/source/build.hxml"));
	win.emit("plugin.misterpah.NewProject:autoOpenProject");
	}




function create_project_custom(pluginName,projectName)
	{
	//console.log(pluginName,projectName);
	if (pluginName == "haxestudioplugin")
		{
		create_haxestudio_plugin(projectName);
		}
	}


function create_project(template_name)
	{
	var projectName = $("#"+template_name+"_projectName").val();
	var projectFolder = $("#"+template_name+"_projectFolder").val();
	
	var template_obj = template[template_name];
	if (template_obj.command.startsWith("CUSTOMJS"))
		{
		var template_obj_customcommand = template_obj.command.split(" ")[1];

		if (projectName != "")
			{
			create_project_custom(template_obj_customcommand,projectName);
			}
		else
			{
			notify("project name can't be blank","danger");
			}
		return;
		}
	
	
	if (projectName != "" && projectFolder != "")
		{
		console.log(projectFolder);
		var exec_obj = []
		exec_obj.push("cd %CD% %QUOTE%"+projectFolder+"%QUOTE%");
		exec_obj.push(template_obj.command.replace("%ProjectName%","%QUOTE%"+projectName+"%QUOTE%"));
		
		Utils.exec(exec_obj,function(p1,p2,p3){
			console.log(p1);
			console.log(p2);
			console.log(p3);

			if (p1 == null)
				{
				notify("project Created !","success");
				win.emit("plugin.misterpah.NewProject:project_created",projectFolder,projectName,template_obj.projectFile);
				}
			else
				{
				notify(p2,"danger");
				}
		
		});
		}
	else
		{
		alert("Please complete the Project Setup")
		}
	}
	
function build_desc(obj)
	{
	console.dir(obj);
	var projectDisplay = "";
	if (obj.command.startsWith("CUSTOMJS"))
		{
		projectDisplay = 'style="display:none"';
		}
	var ret = ['<div id="'+obj.name+'" style="display:none;margin-top:10px;" class="col-xs-12">',
	'<h3>Setup Project</h3>',
	'<div '+projectDisplay+' class="col-xs-12">',
		'<label class="col-xs-4">Project folder</label>',
		'<input id="'+obj.name+'_projectFolder" class="col-xs-8 text-right" type="file" nwdirectory>',
		'<div style="clear:both"> </div>',
	'</div>',
	'<br>',
	'<b>sample name :</b> '+obj.parameter.ProjectName+'<br/ ><br/ >',
	'<b>Project Name :</b><br/ >',
	'<input type="text" class="form-control" id="'+obj.name+'_projectName" placeholder="'+obj.parameter.ProjectName+'">',
	'<br>',
	'<button type="button" onclick="create_project(\''+obj.name+'\');" class="btn btn-primary btn-lg btn-block">Create '+obj.name+' Project</button>',
	
	'<br><hr><br>',
	
	'<div>'+obj.description+'</div>',
	'<br>',
	'<div><b>Require haxelib library :</b> '+obj.requirement+'</div>',
	'<br>',
	"<b>Command : </b>",
	"<div class='well'>"+obj.command+"</div>",	
	'<div style="clear:both"></div>',
	'</div>'
	].join("\n");
	
	return ret;
	}
</script>
<div style="z-index:9999" class='notifications bottom-right'></div>
<div class="container">
<h1>Create New Project</h1>
<hr></hr>

	<div id="project_list"  class="col-xs-5" style="border-right:1px solid #eee">
	 <p><b>Choose Template :</b></p>
	</div>
	<div id='right_panel' style="display:none;" class="col-xs-7" >
		<div id="project_desc">
		</div>
	</div>
</div>

